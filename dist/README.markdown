TIME LOG
========

1. Purpose
----------
This program helps you keep a log of how much time you spend on specific
projects.

2. Approach
-----------

The program displays a small window with a tree of projects and sub-projects at
regular intervals. Each root node should correspond to a specific project that
[your supervisors want] you want to track. You can create any number of
sub-projects by either editing the project file (see section 3.1) and reloading
the program, or right-clicking a node in the user interface.

Once a node is pressed (left click), the window is minimised (or disappears,
depending on the configuration). The window re-appears at the specified interval
is a semi-active state (default colour: blue). If a node is pressed (left click)
within another the specified interval, the time elapsed since the window
appeared will be counted towards the previous entry.

If the task should be stopped or changed before the end of the interval, you can
maximise the program, and click on the STOP button or a different task,
respectively.

The program generates a simple CSV log, where each entry roughly corresponds to
each node clicked. The order used is:

    <start-time>,<end-time>,<main-project>,<sub-project>,<sub-sub-project>,...

The times are currently displayed using the date format "dd/MM/yyyy HH:mm:ss".

2. Setting up the program
-------------------------
The configuration for the program is located in the "config.txt" file. In there,
you can specify various options including the time interval in seconds (default:
intervalInSeconds=3600), the file containing the project and sub-project names
(default: projectsFilename=projects.txt), and the output file for the log
entries (default: logFilename=log.txt).

2.1 Specifying the projects
---------------------------

The projects are specified in the projects file (defined within the
configuration file). The syntax for specifying projects is:

    main_project[{tooltip}]
    				sub_project[{tooltip}]
    								sub_sub_project[{tooltip}]

The top-level projects should be your main projects (projects that project
administration care about). Each name can have its tooltip appended in curly
brackets. See projects.txt (the default projects file) for an example.

2.2 Alternative behaviour
-------------------------
Some window managers do not support minimisation of windows (default:
behaviour=minimise). In that case, specifying "behaviour=hide" in the
"config.txt" file will instead completely hide the window. However, this does
make it more difficult to show the window again before the end of the specified
interval (e.g. to stop/change the logging). In this case, you might want to use
the non-daemon mode to run the program (see below).

3. Running the program
----------------------
Software required:

- JRE 6 (aptitude package: openjdk-6-jre).

On Windows, run

  ./run.bat

On Linux, run

  ./run.sh

The two scripts are identical, and contain a single command

  java -jar TimeLog.jar

4. Using a spreadsheet
----------------------
The following instructions work for Excel 2007.

4.1 Importing
-------------
- open a spreadsheet;
- select the "Data" tab;
- choose "Get External Data";
- choose "From Text";
- select the log file generated by TimeLog;
- select "Delimited" (leave other settings alone);
- click Next;
- select "Comma" only (leave other settings alone);
- select "General" 'Column data format';
- select where to place the data.

4.2 Calculating the time periods
--------------------------------
- select the date cells;
- right click;
- choose "Format cells...";
- select the "Number" tab;
- choose the "Custom" category;
- type in "dd/mm/yyyy hh:mm:ss" for Type;
- click OK;
- select cell to calculate difference in, e.g. A1 and A2;
- type "=A2-A1";
- select the cell;
- right click;
- choose "Format cells...";
- choose the "Custom" category;
- type "hh:mm:ss" for Type;
- click OK.

5. Feedback
-----------
All feedback is much appreciated. Please send it to:
[Rok Strnisa](mailto:rok.strnisa@citrix.com "rok.strnisa@citrix.com")

Thanks.
